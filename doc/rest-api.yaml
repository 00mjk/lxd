definitions:
  Server:
    description: Server represents a LXD server
    properties:
      api_extensions:
        example:
        - etag
        - patch
        - network
        - storage
        items:
          type: string
        type: array
        x-go-name: APIExtensions
      api_status:
        example: stable
        type: string
        x-go-name: APIStatus
      api_version:
        example: "1.0"
        type: string
        x-go-name: APIVersion
      auth:
        example: untrusted
        type: string
        x-go-name: Auth
      auth_methods:
        example:
        - tls
        - candid
        items:
          type: string
        type: array
        x-go-name: AuthMethods
      config:
        additionalProperties:
          type: object
        example:
          core.https_address: :8443
          core.trust_password: true
        type: object
        x-go-name: Config
      environment:
        $ref: '#/definitions/ServerEnvironment'
      public:
        example: true
        type: boolean
        x-go-name: Public
    type: object
    x-go-package: github.com/lxc/lxd/shared/api
  ServerEnvironment:
    description: ServerEnvironment represents the read-only environment fields of
      a LXD server
    properties:
      addresses:
        example:
        - :8443
        items:
          type: string
        type: array
        x-go-name: Addresses
      architectures:
        example:
        - x86_64
        - i686
        items:
          type: string
        type: array
        x-go-name: Architectures
      certificate:
        example: X509 PEM certificate
        type: string
        x-go-name: Certificate
      certificate_fingerprint:
        example: fd200419b271f1dc2a5591b693cc5774b7f234e1ff8c6b78ad703b6888fe2b69
        type: string
        x-go-name: CertificateFingerprint
      driver:
        example: lxc | qemu
        type: string
        x-go-name: Driver
      driver_version:
        example: 4.0.7 | 5.2.0
        type: string
        x-go-name: DriverVersion
      firewall:
        example: nftables
        type: string
        x-go-name: Firewall
      kernel:
        example: Linux
        type: string
        x-go-name: Kernel
      kernel_architecture:
        example: x86_64
        type: string
        x-go-name: KernelArchitecture
      kernel_features:
        additionalProperties:
          type: string
        example:
          netnsid_getifaddrs: "true"
          seccomp_listener: "true"
        type: object
        x-go-name: KernelFeatures
      kernel_version:
        example: 5.4.0-36-generic
        type: string
        x-go-name: KernelVersion
      lxc_features:
        additionalProperties:
          type: string
        example:
          cgroup2: "true"
          devpts_fd: "true"
          pidfd: "true"
        type: object
        x-go-name: LXCFeatures
      os_name:
        example: Ubuntu
        type: string
        x-go-name: OSName
      os_version:
        example: "20.04"
        type: string
        x-go-name: OSVersion
      project:
        example: default
        type: string
        x-go-name: Project
      server:
        example: lxd
        type: string
        x-go-name: Server
      server_clustered:
        example: false
        type: boolean
        x-go-name: ServerClustered
      server_name:
        example: castiana
        type: string
        x-go-name: ServerName
      server_pid:
        example: 1453969
        format: int64
        type: integer
        x-go-name: ServerPid
      server_version:
        example: "4.11"
        type: string
        x-go-name: ServerVersion
      storage:
        example: dir | zfs
        type: string
        x-go-name: Storage
      storage_version:
        example: 1 | 0.8.4-1ubuntu11
        type: string
        x-go-name: StorageVersion
    type: object
    x-go-package: github.com/lxc/lxd/shared/api
  ServerPut:
    description: ServerPut represents the modifiable fields of a LXD server configuration
    properties:
      config:
        additionalProperties:
          type: object
        example:
          core.https_address: :8443
          core.trust_password: true
        type: object
        x-go-name: Config
    type: object
    x-go-package: github.com/lxc/lxd/shared/api
  ServerUntrusted:
    description: ServerUntrusted represents a LXD server for an untrusted client
    properties:
      api_extensions:
        example:
        - etag
        - patch
        - network
        - storage
        items:
          type: string
        type: array
        x-go-name: APIExtensions
      api_status:
        example: stable
        type: string
        x-go-name: APIStatus
      api_version:
        example: "1.0"
        type: string
        x-go-name: APIVersion
      auth:
        example: untrusted
        type: string
        x-go-name: Auth
      auth_methods:
        example:
        - tls
        - candid
        items:
          type: string
        type: array
        x-go-name: AuthMethods
      public:
        example: true
        type: boolean
        x-go-name: Public
    type: object
    x-go-package: github.com/lxc/lxd/shared/api
info:
  contact:
    email: lxc-devel@lists.linuxcontainers.org
    name: LXD upstream
    url: https://github.com/lxc/lxd
  description: |-
    This is the REST API used by all LXD clients.
    Internal endpoints aren't included in this documentation.

    The LXD API is available over both a local unix+http and remote https API.
    Authentication for local users relies on group membership and access to the unix socket.
    For remote users, the default authentication method is TLS client
    certificates with a macaroon based (candid) authentication method also
    supported.

    WARNING: This API documentation is a work in progress.
    You may find the full documentation in its old format at "doc/rest-api.md".
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: LXD external REST API
  version: "1.0"
paths:
  /:
    get:
      description: |-
        Returns a list of supported API versions (URLs).

        Internal API endpoints are not reported as those aren't versioned and
        should only be used by LXD itself.
      operationId: api_get
      produces:
      - application/json
      responses:
        "200":
          description: API endpoints
          schema:
            description: Sync response
            properties:
              metadata:
                description: List of endpoints
                example:
                - /1.0
                items:
                  type: string
                type: array
              status:
                description: Status description
                example: Success
                type: string
              status_code:
                description: Status code
                example: 200
                type: int
              type:
                description: Response type
                example: sync
                type: string
            type: object
      summary: Get the supported API enpoints
      tags:
      - server
  /1.0:
    get:
      description: Shows the full server environment and configuration.
      operationId: server_get
      produces:
      - application/json
      responses:
        "200":
          description: Server environment and configuration
          schema:
            description: Sync response
            properties:
              metadata:
                $ref: '#/definitions/Server'
              status:
                description: Status description
                example: Success
                type: string
              status_code:
                description: Status code
                example: 200
                type: int
              type:
                description: Response type
                example: sync
                type: string
            type: object
        "500":
          $ref: '#/responses/InternalServerError'
      summary: Get the server environment and configuration
      tags:
      - server
    patch:
      consumes:
      - application/json
      description: Updates a subset of the server configuration.
      operationId: server_patch
      parameters:
      - description: Server configuration
        in: body
        name: server
        required: true
        schema:
          $ref: '#/definitions/ServerPut'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/EmptySyncResponse'
        "400":
          $ref: '#/responses/BadRequest'
        "403":
          $ref: '#/responses/Forbidden'
        "412":
          $ref: '#/responses/PreconditionFailed'
        "500":
          $ref: '#/responses/InternalServerError'
      summary: Partially update the server configuration
      tags:
      - server
    put:
      consumes:
      - application/json
      description: Updates the entire server configuration.
      operationId: server_put
      parameters:
      - description: Server configuration
        in: body
        name: server
        required: true
        schema:
          $ref: '#/definitions/ServerPut'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/EmptySyncResponse'
        "400":
          $ref: '#/responses/BadRequest'
        "403":
          $ref: '#/responses/Forbidden'
        "412":
          $ref: '#/responses/PreconditionFailed'
        "500":
          $ref: '#/responses/InternalServerError'
      summary: Update the server configuration
      tags:
      - server
  /1.0?public:
    get:
      description: |-
        Shows a small subset of the server environment and configuration
        which is required by untrusted clients to reach a server.

        The `?public` part of the URL isn't required, it's simply used to
        separate the two behaviors of this endpoint.
      operationId: server_get_untrusted
      produces:
      - application/json
      responses:
        "200":
          description: Server environment and configuration
          schema:
            description: Sync response
            properties:
              metadata:
                $ref: '#/definitions/ServerUntrusted'
              status:
                description: Status description
                example: Success
                type: string
              status_code:
                description: Status code
                example: 200
                type: int
              type:
                description: Response type
                example: sync
                type: string
            type: object
        "500":
          $ref: '#/responses/InternalServerError'
      summary: Get the server environment
      tags:
      - server
responses:
  BadRequest:
    description: Bad Request
    schema:
      properties:
        code:
          example: 400
          format: int64
          type: integer
          x-go-name: Code
        error:
          example: bad request
          type: string
          x-go-name: Error
        type:
          example: error
          type: string
          x-go-name: Type
      type: object
  EmptySyncResponse:
    description: Empty sync response
    schema:
      properties:
        status:
          example: Success
          type: string
          x-go-name: Status
        status_code:
          example: 200
          format: int64
          type: integer
          x-go-name: StatusCode
        type:
          example: sync
          type: string
          x-go-name: Type
      type: object
  Forbidden:
    description: Forbidden
    schema:
      properties:
        code:
          example: 403
          format: int64
          type: integer
          x-go-name: Code
        error:
          example: not authorized
          type: string
          x-go-name: Error
        type:
          example: error
          type: string
          x-go-name: Type
      type: object
  InternalServerError:
    description: Internal Server Error
    schema:
      properties:
        code:
          example: 500
          format: int64
          type: integer
          x-go-name: Code
        error:
          example: internal server error
          type: string
          x-go-name: Error
        type:
          example: error
          type: string
          x-go-name: Type
      type: object
  PreconditionFailed:
    description: Precondition Failed
    schema:
      properties:
        code:
          example: 412
          format: int64
          type: integer
          x-go-name: Code
        error:
          example: precondition failed
          type: string
          x-go-name: Error
        type:
          example: error
          type: string
          x-go-name: Type
      type: object
swagger: "2.0"
